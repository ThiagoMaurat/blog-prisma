// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  name         String
  email        String     @unique
  password     String
  created_at   DateTime   @default(now())
  roles        Role[]
  sessions     Session[]
  authoredPost Post[]
  UserRole     UserRole[]
  UserPost     UserPost[]

  @@map("users")
}

enum RoleType {
  admin
  reader
}

model Role {
  id          String           @id @default(uuid())
  name        RoleType         @unique
  users       UserRole[]
  permissions RolePermission[]
  User        User?            @relation(fields: [userId], references: [id])
  userId      String?
}

model UserRole {
  id     String @id @default(uuid())
  userId String
  roleId String
  user   User   @relation(fields: [userId], references: [id])
  role   Role   @relation(fields: [roleId], references: [id])
}

model Permission {
  id    String           @id @default(uuid())
  name  String           @unique
  roles RolePermission[]
}

model RolePermission {
  id           String     @id @default(uuid())
  roleId       String
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])
}

model Session {
  id           String   @id @default(uuid())
  userId       String
  accessToken  String
  refreshToken String
  createdAt    DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id])
}

model Post {
  id          String     @id @default(uuid())
  title       String
  content     String
  publishedAt DateTime?
  authorId    String
  author      User       @relation(fields: [authorId], references: [id])
  UserPost    UserPost[]
}

model UserPost {
  id     String @id @default(uuid())
  userId String
  postId String
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
}
